@page "/"
@inject PokemonService PokemonService
@using System.Globalization

<h1>Pokemon Overview</h1>
<MudDivider />

<MudContainer Style="width: 100%">
    <MudGrid Justify="Justify.Center" Spacing="4">
        @if (PokemonList is not null)
        {
            @foreach (var pokemon in PokemonList)
            {
                <MudItem>
                    <MudCard Style="width: 200px; height: auto;">
                        <MudImage
                          src="@pokemon.ImageUrl"
                          Alt="@pokemon.Name"
                          Style="width: 200px; height: auto; image-rendering: pixelated"
                        />
                        <MudCardContent>
                            <MudText Typo="Typo.h5">@pokemon.Name</MudText>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            }
        }
        else
        {
            <MudText Typo="Typo.h6">Loading Pokémon...</MudText>
        }
    </MudGrid>
</MudContainer>


@code {
    private List<PokemonViewModel>? PokemonList;

    protected override async Task OnInitializedAsync()
    {
        PokemonList = await LoadPokemonListAsync();
    }

    private async Task<List<PokemonViewModel>> LoadPokemonListAsync()
    {
        var pokemonEntries = new List<PokemonViewModel>();
        var pokemonResourceList = await PokemonService.GetNamedResourceListAsync();

        if (pokemonResourceList is not null)
        {
            foreach (var resource in pokemonResourceList)
            {
                var urlParts = resource.Url.TrimEnd('/').Split('/');
                var id = urlParts[^1];

                pokemonEntries.Add(new PokemonViewModel
                    {
                        Name = CultureInfo.CurrentCulture.TextInfo.ToTitleCase(resource.Name),
                        ImageUrl = $"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/{id}.png"
                    });
            }
        }

        return pokemonEntries;
    }

    private class PokemonViewModel
    {
        public required string Name { get; set; }
        public required string ImageUrl { get; set; }
    }
}